

;;;; enemy types
;	0 = [nothing]
;	1 = starglasses	2x2
;	2 = skully	2x2
;	3 = maggs	2x1
;	4 = birb	1x1
;	5 = bullet0	1x1

        
update_enemies: subroutine

;;; enemy data struct
; type 0 = no enemy
; health
; x_base
; y_base
; pattern_counter
; animation_frame
; 7 and 8 bytes unassigned

;;; enemy bullet struc
; x_pos
; y_pos
; direction
; type
; enemy bullet is just another type of enemy


;;; HANDLING STARGLASSES
	; update position
        ; X POS
	inc spin_x
        ldx spin_x
        lda sine_table,x
        lsr
        lsr
        clc
        adc enemy_x
        ; stash it in collision detector
        sta collision_0_x
        ;sta trans_x
        ; top-left sprite
        ;lda trans_x
        sta $283
        sta $28b
        adc #$08
        sta $287
        sta $28f
        ; Y POS
	inc spin_y
	inc spin_y
        ldx spin_y
        lda sine_table,x
        lsr
        lsr
        clc
        adc enemy_y
        ; stash it in collision detector
        sta collision_0_y
        ;sta trans_y
        ;lda trans_y
        sta $280
        sta $284
        adc #$08
        sta $288
        sta $28c
        ; tiles
        ldx enemy_frame
        cpx #$00
        bne .adjust_frame
        ldx #$40
        stx enemy_frame
.adjust_frame
	dex
        stx enemy_frame
        txa
        and #$20
        bne .frame1
.frame0
        lda #$0c
        sta $281
        lda #$0d
        sta $285
        lda #$1c
        sta $289
        lda #$1d
        sta $28d
        jmp .frame_done
.frame1
        lda #$0e
        sta $281
        lda #$0f
        sta $285
        lda #$1e
        sta $289
        lda #$1f
        sta $28d
.frame_done
        ; palette
        lda #$03
        sta $282
        sta $286
        sta $28a
        sta $28e
; shot by bullet?
	lda #$10
        sta collision_0_w
        sta collision_0_h
        jsr player_bullet_collision_handler
        cmp #$00
        beq .nothing
        ; palette
        lda #$00
        sta $282
        sta $286
        sta $28a
        sta $28e
.nothing
    
    
;;;; HANDLING BIRB
	; sprite
	lda #$2c
        lda birb_anim
        lsr
        lsr
        lsr
        clc
        adc #$2c
        
        sta $290 + 1
        ; x pos
        ldx birb_patt
        lda sine_table,x
        lsr 
        lsr
        lsr 
        clc
        adc birb_x
	sta $290 + 3
        ; y pos
        lda birb_patt
        clc
        adc #$40
        tax
        lda sine_table,x
        lsr
        lsr
        lsr
        clc 
        adc birb_y
        sta $290
        ; palette
        lda #$01
        sta $290 + 2
        ; update pattern
        inc birb_patt
        inc birb_patt
        ; update animation
        ldx birb_anim
        cpx #$00
        bne .birb_frame
        ldx #$20
        stx birb_anim
.birb_frame
        dec birb_anim
        
        
;;;; HANDLING SKULLY
        ;sprite
        lda skully_anim
        lsr
        lsr
        lsr
        lsr
        lsr
        asl
        sta $20
        tay
        tax
        ; accumulator is now in 0..7 range
        cpx #$0a
        beq .skully_sprite_5
        cpx #$0c
        beq .skully_sprite_6
        cpx #$0e
        beq .skully_sprite_7
.skully_normal_frames
	tya
        clc
        sta $294 + 1
        adc #$01
        sta $298 + 1
        adc #$0f
        sta $29c + 1
        adc #$01
        sta $2a0 + 1
        ; palette
        lda #$03
        sta $294 + 2
        sta $298 + 2
        sta $29c + 2
        sta $2a0 + 2
        jmp .skully_sprites_done
.skully_sprite_5
	lda #$06
        clc
        sta $298 + 1
        adc #$01
        sta $294 + 1
        adc #$0f
        sta $2a0 + 1
        adc #$01
        sta $29c + 1
        ; palette
        lda #$43
        sta $294 + 2
        sta $298 + 2
        sta $29c + 2
        sta $2a0 + 2
	jmp .skully_sprites_done
.skully_sprite_6
	lda #$04
        clc
        sta $298 + 1
        adc #$01
        sta $294 + 1
        adc #$0f
        sta $2a0 + 1
        adc #$01
        sta $29c + 1
        ; palette
        lda #$43
        sta $294 + 2
        sta $298 + 2
        sta $29c + 2
        sta $2a0 + 2
	jmp .skully_sprites_done
.skully_sprite_7
	lda #$02
        clc
        sta $298 + 1
        adc #$01
        sta $294 + 1
        adc #$0f
        sta $2a0 + 1
        adc #$01
        sta $29c + 1
	jmp .skully_sprites_done
.skully_sprites_done
        ; x pos
        lda skully_x
        sta $294 + 3
        sta $29c + 3
        adc #$08
        sta $298 + 3
        sta $2a0 + 3
        ; y pos
        lda skully_y
        sta $294 + 0
        sta $298 + 0
        adc #$08
        sta $29c + 0
        sta $2a0 + 0
.skully_frame
	lda #$07
        clc
        adc skully_anim
        sta skully_anim
        inc skully_x
        ; stash it in collision detector
        lda skully_x
        sta collision_0_x
        lda skully_y
        sta collision_0_y
        lda #$10
        sta collision_0_w
        sta collision_0_h
; shot by bullet?
	lda #$10
        sta collision_0_w
        sta collision_0_h
        jsr player_bullet_collision_handler
        cmp #$00
        beq .skully_nothing
        ; palette
        lda #$00
        sta $282
        sta $286
        sta $28a
        sta $28e
.skully_nothing
        

;;;; HANDLING maggs
	; sprite
	lda #$2c
        lda maggs_anim
        lsr
        lsr
        lsr
        lsr
        asl
        clc
        adc #$3c
        sta $2a4 + 1
        adc #$01
        sta $2a8 + 1
        ; x pos
        ldx maggs_patt
        lda sine_table,x
        lsr 
        lsr
        lsr 
        clc
        adc maggs_x
	sta $2a4 + 3
        adc #$08
        sta $2a8 + 3
        ; y pos
        lda maggs_patt
        clc
        adc #$40
        tax
        lda sine_table,x
        lsr
        lsr
        lsr
        clc 
        adc maggs_y
        sta $2a4
        sta $2a8
        ; palette
        lda #$02
        sta $2a4 + 2
        sta $2a8 + 2
        ; update pattern
        inc maggs_patt
        inc maggs_patt
        ; update animation
        ldx maggs_anim
        cpx #$00
        bne .maggs_frame
        ldx #$20
        stx maggs_anim
.maggs_frame
        dec maggs_anim
        inc maggs_x
        
        
        
	rts